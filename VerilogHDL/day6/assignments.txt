//ASSIGNMENT
//1. COMPLETE THE ENCODER 8:3 WITH DIAGRAM, DUT AND TB
//2. TEST THE DECODER CIRCUIT AND ENCODER CIRCUIT 

//encoder 8:3 

module encoder8x3(d,y);
input [7:0]d;
output reg [2:0]y;

always@*
case(s)
8'b0000_0001: y=3'b000;
8'b0000_0010: y=3'b001;
8'b0000_0100: y=3'b010;
8'b0000_1000: y=3'b011;
8'b0001_0000: y=3'b100;
8'b0010_0000: y=3'b101;
8'b0100_0000: y=3'b110;
8'b1000_0000: y=3'b111;
default: y=3'b000;
endcase
endmodule

// Code your testbench here
// or browse Examples
`timescale 1ns/1ps
module tb;
  
reg [7:0]d;
wire [2:0]y;
  integer i;
encoder8x3 ins1(d,y);
  initial begin 
    $monitor("simtime=%0g,d=%b,y=%b",$time,d,y);
    for(i=0;i<=255;i=i+1) begin 
      if(i==8'h01 || i==8'h02 || i==8'h04 || i==8'h08 || i==8'h10 || i==8'h20 || i==8'h40 || i==8'h80) begin
      d=i;
      #5;
      
      end
      else begin
      continue;
      end
    end
    end
endmodule



//Decoder 3x8

module decoder3x8(d,y);
input [2:0]d;
output reg [7:0]y;

always@(d)
case(d)
3'b000: y=8'b0000_0001;
3'b001: y=8'b0000_0010;
3'b010: y=8'b0000_0100;
3'b011: y=8'b0000_1000;
3'b100: y=8'b0001_0000;
3'b101: y=8'b0010_0000;
3'b110: y=8'b0100_0000;
3'b111: y=8'b1000_0000;
endcase
endmodule

//TB

// Code your testbench here
// or browse Examples
`timescale 1ns/1ps
module tb;
  
reg [2:0]d;
wire [7:0]y;
  integer i;
  decoder3x8 ins1(d,y);
  
  initial begin 
    $monitor("simtime=%0g,d=%b,y=%b", $time,d,y);
    for(i=0;i<8;i=i+1) begin 
    d=i;
      #5;
    
    end
  
  end
endmodule
