//ASSIGNMENT : COMPLETE MUX41 USING DATAFLOW MODELLING.
//TRY TO IMPLEMENT 8:1 MUX USING DFLOW AND GATE LEVEL

//MUX4x1 using Dataflow

module mux4x1(i,s,y);
input [3:0]i;
input [1:0]s;
output y;

assign y=s[1]?(s[0]?i[3]:i[2]):(s[0]?i[1]:i[0]);

endmodule

//MUX8x1 using gatelevel

module mux8x1(i,s,y);
input [7:0]i;
input [2:0]s;
output y;

not(s0bar,s[0]);
not(s1bar,s[1]);
not(s2bar,s[2]);
and(y1, s2bar,s1bar,s0bar,i[0]);
and(y2, s2bar,s1bar,s[0],i[1]);
and(y3, s2bar,s[1],s0bar,i[2]);
and(y4, s2bar,s[1],s[0],i[3]);
and(y5, s[2],s1bar,s0bar,i[4]);
and(y6, s[2],s1bar,s[0],i[5]);
and(y7, s[2],s[1],s0bar,i[6]);
and(y8, s[2],s[1],s[0],i[7]);

or(y,y1,y2,y3,y4,y5,y6,y7,y8);
endmodule

//MUX8x1 using Dataflow

module mux8x1(i,s,y);
input [7:0]i;
input [2:0]s;
output y;

assign y=s[2]?(s[1]?(s[0]?i[7]:i[6]):(s[0]?i[5]:i[4])):(s[1]?(s[0]?i[3]:i[2]):(s[0]?i[1]:i[0]));

endmodule

// Code your testbench here

`timescale 1ns/1ps
module tb;
  
reg [7:0]i;
reg [2:0]s;
wire y;
  integer j;
mux8x1 ins1(i,s,y);
  
  initial begin 
    $monitor("simtime=%0g, i=%b, s=%b, y=%b", $time, i, s, y);
    i=8'b1010_1010;
    for(j=0;j<=7;j=j+1) begin 
      s=j;
      #5;
    end
    end
endmodule
